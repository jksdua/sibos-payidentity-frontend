{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","withRoot.js","logger/winston.js","BlockchainService/blockchainService.ts","helpers/BlankBill.ts","CastVoteModalComponent/CastVoteModalComponent.tsx","DomainNameComponent/IbanPanelDetails.tsx","DomainNameComponent/PayPalPanelDetails.tsx","DomainNameComponent/EthereumPanelDetails.tsx","DomainNameComponent/BitcoinPanelDetails.tsx","DomainNameComponent/PaymentMethodPanels.tsx","DomainNameComponent/DomainName.tsx","DomainNameComponent/EmailPanelDetails.tsx","DomainNameComponent/MobileNumberPanelDetails.tsx","DomainNameComponent/Identities.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","createMuiTheme","palette","primary","light","cyan","main","dark","secondary","blueGrey","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","MuiThemeProvider","CssBaseline","logger","createLogger","level","format","combine","timestamp","splat","json","defaultMeta","service","transports","Console","BlockchainService","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","web3","getWeb3","catch","warn","Promise","_ref","asyncToGenerator","regenerator_default","mark","_callee","reject","response","wrap","_context","prev","next","window","ethereum","Web3","enable","sent","length","eth","defaultAccount","t0","error","info","currentProvider","stop","_x","_x2","apply","arguments","networkName","contractAddresses","rinkeby","address","billUri","inFavour","net","getNetworkType","contractAddress","getVoteContractAddress","Contract","voteContractAbi","defaultGasPrice","gasPrice","methods","vote","send","from","then","receipt","err","React","blankBill","act","amendmentLists","billNo","billType","billTypeURI","billYear","debates","events","lastUpdated","longTitleEn","longTitleGa","method","methodURI","mostRecentStage","event","chamber","chamberCode","showAs","uri","dates","house","chamberType","houseCode","houseNo","progressStage","stageCompleted","stageOutcome","stageURI","originHouse","relatedDocs","shortTitleEn","shortTitleGa","source","sourceURI","sponsors","stages","status","statusURI","versions","CastVoteModalComponent","name","email","setState","_objectSpread","bill","enqueueSnackbar","closeSnackbar","concat","voteCastNotification","variant","castVote","voteFailedNotification","setTimeout","_this2","Dialog","open","onEnter","setTaNilTab","bind","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","Paper","square","className","Tabs","value","onChange","change","newValue","indicatorColor","textColor","Tab","icon","ThumbUp","label","ThumbDown","DialogContentText","DialogActions","Button","onClick","color","HowToVoteOutlined","withSnackbar","useStyles","makeStyles","createStyles","root","width","heading","fontSize","pxToRem","flexBasis","flexShrink","secondaryHeading","text","buttonSuccess","backgroundColor","green","&:hover","fabProgress","buttonProgress","IbanPanelDetails","classes","_React$useState","useState","domainName","_React$useState2","slicedToArray","values","setValues","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","success","setSuccess","buttonClassname","clsx","defineProperty","timer","useRef","useEffect","clearTimeout","current","ExpansionPanelDetails","Grid","container","spacing","alignItems","item","TextField","disabled","margin","IbanPanelDetails_objectSpread","target","setCheckMark","CircularProgress","size","PayPalPanelDetails","PayPalPanelDetails_objectSpread","EthereumPanelDetails","EthereumPanelDetails_objectSpread","BitcoinPanelDetails","BitcoinPanelDetails_objectSpread","PaymentMethodPanels","expanded","setExpanded","iban","setIban","payPal","setPayPal","_React$useState7","_React$useState8","setEthereum","_React$useState9","_React$useState10","bitcoin","setBitcoin","handleChange","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","justify","Typography","Check_default","DomainNamePanelDetails","DomainName_objectSpread","EmailPanelDetails","EmailPanelDetails_objectSpread","MobileNumberPanelDetails","MobileNumberPanelDetails_objectSpread","Identities","setEmail","domain","setDomain","phone","setPhone","App","reason","App_objectSpread","castVoteModalOpen","isWeb3User","isWeb3Injected","handleClick","bills","billToVoteOn","undefined","domainNameInput","document","getElementById","emailInput","phoneInput","ibanInput","payPalInput","ethereumInput","bitcoinInput","options","body","user","uuidv4","payments","identities","require","rp","src_CastVoteModalComponent_CastVoteModalComponent","xs","gutterBottom","fullWidth","save","Boolean","location","hostname","match","ReactDOM","render","build","maxSnack","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba9410f3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 632;","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: cyan[500],\n      main: cyan[700],\n      dark: cyan[900]\n    },\n    secondary: {\n      light: blueGrey[300],\n      main: blueGrey[500],\n      dark: blueGrey[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import { createLogger, format, transports } from \"winston\";\n\nconst logger = createLogger({\n  level: \"info\",\n  format: format.combine(\n    format.timestamp({\n      format: \"YYYY-MM-DD HH:mm:ss\"\n    }),\n    format.splat(),\n    format.json()\n  ),\n  defaultMeta: { service: \"citizens-vote-ui\" },\n  transports: [\n    new transports.Console({\n      format: format.json(),\n      level: \"warn\"\n    })\n  ]\n});\n\n//\n// If we're not in production then **ALSO** log to the `console`\n// with the colorized simple format.\n//\nif (process.env.NODE_ENV !== \"production\") {\n  logger.clear();\n  logger.add(\n    new transports.Console({\n      format: format.colorize()\n    })\n  );\n}\n\nexport default logger;\n","import Web3 from \"web3\";\nimport React from \"react\";\nimport logger from \"../logger/winston\";\nimport voteContractAbi from \"../Contracts/NationalVote.abi.json\";\nimport contractAddresses from \"../Contracts/ContractAddresses.json\";\n\n// Stop typescript complaining about the window definition not having ethereum or web3 in it\ndeclare let window: any; // <--- Declare it like this\n\n/**\n * Service for sending/getting messages from the Blockchain\n *\n *\n */\ninterface Props {}\ninterface State {\n  web3: any;\n}\n/**\n * Class for interacting with the Blockchain\n */\nexport default class BlockchainService extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      web3: this.getWeb3().catch(() => {\n        logger.warn(\n          \"Failed to get a web3 object while instantiating Blockchain Service\"\n        );\n      })\n    };\n  }\n\n  /**\n   * Function to check whether there's an injected web3 in this browser.\n   * Returns boolean\n   */\n  public static isWeb3Injected(): boolean {\n    // Modern dapp browsers\n    if (window.ethereum) {\n      logger.info(`Window.ethereum provided.`);\n      return true;\n    }\n    // Legacy dapp browsers\n    else if (window.web3) {\n      logger.info(\"Window.web3 provided\");\n      return true;\n    }\n    // Non-dapp browsers\n    else {\n      logger.warn(\"No web3 provider detected\");\n      return false;\n    }\n  }\n\n  // Function to return the injected web3 object supplied by Metamask.\n  public async getWeb3(): Promise<Web3> {\n    return new Promise(async function(resolve, reject) {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          const response = await window.ethereum.enable();\n          if (response.length >= 1)\n            window.web3.eth.defaultAccount = response[0];\n          resolve(window.web3);\n        } catch (error) {\n          logger.error(\n            \"Calling window.ethereum.enable() threw an error. Something is probably wrong. \"\n          );\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        logger.info(\"Window.web3 provided\");\n        window.web3 = new Web3(window.web3.currentProvider);\n        // Acccounts always exposed\n        resolve(window.web3);\n      }\n      // Non-dapp browsers...\n      else {\n        logger.warn(\"No web3 provider detected\");\n        reject(\"No web3 provider detected\");\n      }\n    });\n  }\n\n  // Function that looks up ContractAddresses.json and returns the address of the vote contract on that network.\n  public getVoteContractAddress(networkName: \"main\" | \"rinkeby\"): string {\n    if (networkName === \"rinkeby\") return contractAddresses.rinkeby.address;\n    else if (networkName === \"main\") {\n      return contractAddresses.main.address;\n    } else {\n      throw new Error(\"Unknown ethereum network name\");\n    }\n  }\n\n  public async castVote(billUri: string, inFavour: boolean): Promise<any> {\n    const web3 = await this.state.web3;\n    const networkName = await web3.eth.net.getNetworkType();\n    // Get the address of the Vote Smart Contract depending on which network you are connected to\n    const contractAddress = this.getVoteContractAddress(networkName);\n\n    if (!web3.eth.defaultAccount) {\n      // There is no default account set. For now just fail as it is likely something has gone wrong.\n      throw new Error(\n        \"No web3.eth.defaultAccount available. Something went wrong. \"\n      );\n    }\n\n    return new Promise(function(resolve, reject) {\n      // Rinkeby contract address 0xc9f0ceebfa12ec7828245375cfb634bd387bbee7\n\n      if (web3) {\n        const voteContract = new web3.eth.Contract(\n          voteContractAbi,\n          contractAddress,\n          {\n            defaultGasPrice: web3.eth.gasPrice * 1.1\n          }\n        );\n\n        voteContract.methods\n          .vote(billUri, inFavour)\n          .send({ from: web3.eth.defaultAccount })\n          .then((receipt: any) => {\n            resolve(receipt);\n          })\n          .catch((err: any) => {\n            reject(err);\n          });\n      } else {\n        reject(\"No web3 object could be read from state\");\n      }\n    });\n  }\n}\n","import Bill from \"../OireachtasService/interfaces/iBill\";\n\nconst blankBill: Bill = {\n  act: \"\",\n  amendmentLists: [],\n  billNo: \"\",\n  billType: \"\",\n  billTypeURI: \"\",\n  billYear: \"\",\n  debates: [],\n  events: [],\n  lastUpdated: \"\",\n  longTitleEn: \"\",\n  longTitleGa: \"\",\n  method: \"\",\n  methodURI: \"\",\n  mostRecentStage: {\n    event: {\n      chamber: {\n        chamberCode: \"\",\n        showAs: \"\",\n        uri: \"\"\n      },\n      dates: [],\n      house: {\n        chamberCode: \"\",\n        chamberType: \"\",\n        houseCode: \"\",\n        houseNo: \"\",\n        showAs: \"\",\n        uri: \"\"\n      },\n      progressStage: 0,\n      showAs: \"\",\n      stageCompleted: false,\n      stageOutcome: null,\n      stageURI: \"\",\n      uri: \"\"\n    }\n  },\n  originHouse: {\n    showAs: \"\",\n    uri: \"\"\n  },\n  relatedDocs: [],\n  shortTitleEn: \"\",\n  shortTitleGa: \"\",\n  source: \"\",\n  sourceURI: \"\",\n  sponsors: [],\n  stages: [],\n  status: \"\",\n  statusURI: \"\",\n  uri: \"\",\n  versions: []\n};\n\nexport default blankBill;\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport Bill from \"../OireachtasService/interfaces/iBill\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  Paper,\n  Tabs,\n  Tab\n} from \"@material-ui/core\";\nimport logger from \"../logger/winston\";\nimport { HowToVoteOutlined, ThumbDown, ThumbUp } from \"@material-ui/icons\";\nimport BlockchainService from \"../BlockchainService/blockchainService\";\nimport blankBill from \"../helpers/BlankBill\";\n\ninterface Props {\n  // Whether dialog should render\n  open: boolean;\n  // Bill to vote on\n  bill: Bill | undefined;\n  // Whether this modal should launch leaning infavour/against bill\n  inFavour: boolean;\n  // Function to close modal without casting vote\n  handleClose: any;\n  // Functions for toast\n  enqueueSnackbar: any;\n  closeSnackbar: any;\n}\n\ninterface State {\n  inFavour: boolean;\n  name: string;\n  email: string;\n}\n\n/**\n * Component to present a user with a summary of their vote before they cast it with metamask\n *\n * Once a vote is cast and the transaction is mined, the bill is saved to localstorage on the clients browser\n */\nclass CastVoteModalComponent extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { inFavour: this.props.inFavour, name: \"\", email: \"\" };\n  }\n\n  /**\n   * Function called when the Dialog component fires onEnter callback.\n   * Reads props.inFavour and overrides state.inFavour if necessary.\n   */\n  setTaNilTab() {\n    this.setState({ ...this.state, inFavour: this.props.inFavour });\n  }\n\n  /**\n   * Function that handles when the 'Cast Vote' button is clicked.\n   *\n   * First, calls the castVote function passed down from App.tsx that handles the web3 stuff\n   * Then creates Snackbars indicating progress.\n   */\n  async castVote(\n    bill: Bill,\n    inFavour: boolean,\n    enqueueSnackbar: any,\n    closeSnackbar: any\n  ): Promise<any> {\n    return new Promise(function(resolve, reject) {\n      logger.info(\n        `Casting Vote. BillTitle: ${bill.shortTitleEn}, inFavour: ${inFavour}`\n      );\n\n      const voteCastNotification = enqueueSnackbar(\"Casting your vote\", {\n        variant: \"info\"\n      });\n      const blockchainService = new BlockchainService(null);\n      blockchainService\n        .castVote(bill.uri, inFavour)\n\n        // Set a toast saying Ethereum transaction has started\n        .then(() => {\n          logger.info(\n            \"BlockchainServcice.CastVote() resolved, closing Vote Cast Snackbar\"\n          );\n          closeSnackbar(voteCastNotification);\n          resolve();\n        })\n\n        // Give an error Snackbar to the user, something went wrong\n        .catch(() => {\n          const voteFailedNotification = enqueueSnackbar(\n            \"Failed to cast vote\",\n            {\n              variant: \"error\"\n            }\n          );\n\n          // Clear error\n          setTimeout(() => {\n            closeSnackbar(voteFailedNotification);\n          }, 3000);\n\n          // Log a warning\n          logger.warn(\n            \"BlockchainService.voteCast triggered a catch block, user likely rejected transaction\"\n          );\n          reject(\"BlockchainService.voteCast triggered a catch block\");\n        });\n    });\n  }\n\n  render() {\n    if (!this.props.bill) {\n      logger.info(\n        \"Not rendering without a bill object passed as a prop to CastVoteModal. \"\n      );\n      return <div />;\n    } else {\n      return (\n        <Dialog\n          open={this.props.open}\n          onEnter={this.setTaNilTab.bind(this)}\n          onClose={this.props.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {this.props.bill.shortTitleEn}\n          </DialogTitle>\n          <DialogContent>\n            <Paper square className={\"voteModalTabPaperComponent\"}>\n              <Tabs\n                value={this.state.inFavour ? 0 : 1}\n                onChange={(change: any, newValue: number) => {\n                  // This field is Set to 1 if they vote Níl\n                  // This field is set to 0 if they want Tá\n                  // Update state accordingly.\n                  if (newValue === 1) {\n                    this.setState({\n                      ...this.state,\n                      inFavour: false\n                    });\n                  } else {\n                    this.setState({\n                      ...this.state,\n                      inFavour: true\n                    });\n                  }\n                }}\n                variant=\"fullWidth\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n              >\n                <Tab icon={<ThumbUp />} label=\"Tá\" />\n                <Tab icon={<ThumbDown />} label=\"Níl\" />\n              </Tabs>\n            </Paper>\n            <DialogContentText>\n              You are going to cast your vote{\" \"}\n              <b>{this.state.inFavour ? \"for\" : \"against\"}</b> this measure.\n            </DialogContentText>\n            <DialogContentText>{this.props.bill.longTitleEn}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              id={\"CancelVoteButton\"}\n              onClick={this.props.handleClose}\n              color=\"primary\"\n              variant={\"contained\"}\n            >\n              Cancel\n            </Button>\n            <Button\n              id={\"CastVoteButton\"}\n              variant={\"contained\"}\n              onClick={() => {\n                const bill: Bill = this.props.bill\n                  ? this.props.bill\n                  : blankBill;\n                this.castVote(\n                  bill,\n                  this.props.inFavour,\n                  this.props.enqueueSnackbar,\n                  this.props.closeSnackbar\n                )\n                  .then(() => {\n                    logger.info(\"Cast vote button on click returned\");\n                  })\n                  .catch(() => {\n                    logger.warn(\"Casting a vote failed\");\n                  });\n                this.props.handleClose();\n              }}\n              color=\"primary\"\n            >\n              Cast Vote\n              {/* Vote Icon */}\n              <HowToVoteOutlined />\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n}\n\nexport default withSnackbar(CastVoteModalComponent);\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function IbanPanelDetails(props: any) {\n  const classes = useStyles({});\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"iban-field\"\n            label=\"IBAN\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify IBAN with OpenBanking API\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function PayPalPanelDetails(props: any) {\n  const classes = useStyles({});\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"paypal-field\"\n            label=\"PayPal Email\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify your PayPal\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function EthereumPanelDetails(props: any) {\n  const classes = useStyles({});\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"ethereum-field\"\n            label=\"Ethereum Address\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify your Ethereum Address\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function BitcoinPanelDetails(props: any) {\n  const classes = useStyles({});\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"bitcoin-field\"\n            label=\"Bitcoin Address\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify your Bitcoin Address\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Grid } from \"@material-ui/core\";\nimport IbanPanelDetails from \"./IbanPanelDetails\";\nimport PayPalPanelDetails from \"./PayPalPanelDetails\";\nimport EthereumPanelDetails from \"./EthereumPanelDetails\";\nimport BitcoinPanelDetails from \"./BitcoinPanelDetails\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  })\n);\n\nexport default function PaymentMethodPanels() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n  const [iban, setIban] = React.useState(false);\n  const [payPal, setPayPal] = React.useState(false);\n  const [ethereum, setEthereum] = React.useState(false);\n  const [bitcoin, setBitcoin] = React.useState(false);\n\n  const handleChange = (panel: string) => (\n    event: React.ChangeEvent<{}>,\n    isExpanded: boolean\n  ) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>IBAN</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments to your IBAN via Swift\n              </Typography>\n            </Grid>\n            <Grid item>{iban && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <IbanPanelDetails setCheckMark={setIban} />\n      </ExpansionPanel>\n\n      <ExpansionPanel\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>PayPal</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive PayPal transfers\n              </Typography>\n            </Grid>\n            <Grid item>{payPal && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <PayPalPanelDetails setCheckMark={setPayPal} />\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>Ethereum</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments to your Ethereum Wallet\n              </Typography>\n            </Grid>\n            <Grid item>{ethereum && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <EthereumPanelDetails setCheckMark={setEthereum} />\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>Bitcoin</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments to your Bitcoin Wallet\n              </Typography>\n            </Grid>\n            <Grid item>{bitcoin && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <BitcoinPanelDetails setCheckMark={setBitcoin} />\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function DomainNamePanelDetails(props: any) {\n  const classes = useStyles({});\n\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"domain-name-field\"\n            label=\"Domain Name\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify Ownership\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function EmailPanelDetails(props: any) {\n  const classes = useStyles({});\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"email-field\"\n            label=\"Email\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify Email\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n  TextField,\n  Theme,\n  makeStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\nexport default function MobileNumberPanelDetails(props: any) {\n  const classes = useStyles({});\n\n  const [values, setValues] = React.useState({\n    domainName: \"\"\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  let timer: any = React.useRef<number>();\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        props.setCheckMark(true);\n      }, 1000);\n    }\n  };\n  const handleInputChange = (name: string) => (event: {\n    target: { value: any };\n  }) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <ExpansionPanelDetails>\n      <Grid container spacing={2} alignItems={\"center\"}>\n        <Grid item>\n          <TextField\n            id=\"mobile-number-field\"\n            label=\"Mobile Number\"\n            value={values.domainName}\n            disabled={success}\n            margin=\"normal\"\n            onChange={handleInputChange(\"domainName\")}\n          />\n        </Grid>\n        <Grid item>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n            >\n              Verify Phone Number\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport { green } from \"@material-ui/core/colors\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DomainNamePanelDetails from \"./DomainName\";\nimport EmailPanelDetails from \"./EmailPanelDetails\";\nimport MobileNumberPanelDetails from \"./MobileNumberPanelDetails\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      \"&:hover\": {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500]\n    },\n    buttonProgress: {\n      color: green[500]\n    }\n  })\n);\n\nexport default function Identities(this: any) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n  const [email, setEmail] = React.useState(false);\n  const [domain, setDomain] = React.useState(false);\n  const [phone, setPhone] = React.useState(false);\n\n  const handleChange = (panel: string) => (\n    event: React.ChangeEvent<{}>,\n    isExpanded: boolean\n  ) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>Domain Name</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments addressed directly to a domain name\n              </Typography>\n            </Grid>\n            <Grid item>{domain && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <DomainNamePanelDetails setCheckMark={setDomain} />\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>Email Address</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments to your email address\n              </Typography>\n            </Grid>\n            <Grid item>{email && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <EmailPanelDetails setCheckMark={setEmail} />\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Grid container spacing={2} justify={\"space-between\"}>\n            <Grid item>\n              <Typography className={classes.heading}>Phone Number</Typography>\n            </Grid>\n            <Grid item>\n              <Typography className={classes.secondaryHeading}>\n                Receive payments to a phone number\n              </Typography>\n            </Grid>\n            <Grid item>{phone && <CheckIcon />}</Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <MobileNumberPanelDetails setCheckMark={setPhone} />\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport uuidv4 from \"uuid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withRoot from \"./withRoot\";\nimport { Grid, Paper, Button } from \"@material-ui/core\";\nimport Oireachtas from \"./OireachtasService/oireachtas\";\nimport Bill from \"./OireachtasService/interfaces/iBill\";\nimport CastVoteModalComponent from \"./CastVoteModalComponent/CastVoteModalComponent\";\nimport BlockchainService from \"./BlockchainService/blockchainService\";\nimport PaymentMethodPanels from \"./DomainNameComponent/PaymentMethodPanels\";\nimport Identities from \"./DomainNameComponent/Identities\";\n\n/**\n * Main page. Outlines what this website is for and contains the sub modules for voting and onboarding.\n */\ninterface Props {}\ninterface State {\n  castVoteModalOpen: boolean;\n  bills: Bill[];\n  billToVoteOn: Bill | undefined;\n  inFavour: boolean;\n}\nclass App extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      castVoteModalOpen: false,\n      bills: [],\n      billToVoteOn: undefined,\n      inFavour: false\n    };\n  }\n\n  /**\n   * Saves the identities entered.\n   */\n  async save() {\n    return new Promise(function(resolve, reject) {\n      // Get identity Inputs\n      const domainNameInput = document.getElementById(\"domain-name-field\")!;\n      const emailInput = document.getElementById(\"email-field\")!;\n      const phoneInput = document.getElementById(\"mobile-number-field\")!;\n\n      // Get Payment Inputs\n      const ibanInput = document.getElementById(\"iban-field\")!;\n      const payPalInput = document.getElementById(\"paypal-field\")!;\n      const ethereumInput = document.getElementById(\"ethereum-field\")!;\n      const bitcoinInput = document.getElementById(\"bitcoin-field\")!;\n\n      // Get values\n      const domain: string = (domainNameInput as HTMLInputElement).value;\n      const email: string = (emailInput as HTMLInputElement).value;\n      const phone: string = (phoneInput as HTMLInputElement).value;\n      const iban: string = (ibanInput as HTMLInputElement).value;\n      const payPal: string = (payPalInput as HTMLInputElement).value;\n      const ethereum: string = (ethereumInput as HTMLInputElement).value;\n      const bitcoin: string = (bitcoinInput as HTMLInputElement).value;\n\n      const uuid = uuidv4();\n      var options = {\n        method: \"POST\",\n        uri:\n          \"https://7eggkw15dk.execute-api.us-west-2.amazonaws.com/Live/party/register\",\n        body: {\n          user: uuid,\n          payments: {\n            iban,\n            payPal,\n            ethereum,\n            bitcoin\n          },\n          identities: {\n            domain,\n            email,\n            phone\n          }\n        },\n\n        json: true // Automatically stringifies the body to JSON\n      };\n      var rp = require(\"request-promise-native\");\n      rp(options)\n        .then((response: any) => {\n          resolve(response);\n        })\n        .catch((error: any) => {\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * This function is passed down to a Bill Component. When called it is passed the Bill interface and a boolean, true meaning voting in favour\n   * @param bill\n   * @param vote\n   */\n  triggerCastVoteModal(bill: Bill, vote: boolean) {\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: true,\n      billToVoteOn: bill,\n      inFavour: vote\n    });\n  }\n\n  handleClose = (event: any, reason: any) => {\n    this.setState({\n      ...this.state,\n      castVoteModalOpen: false\n    });\n  };\n\n  isWeb3User = (): boolean => {\n    return BlockchainService.isWeb3Injected();\n  };\n\n  handleClick = () => {\n    this.setState({ ...this.state, castVoteModalOpen: true });\n  };\n\n  render() {\n    return (\n      <div className={\"centerColumn\"}>\n        <CastVoteModalComponent\n          open={this.state.castVoteModalOpen}\n          handleClose={this.handleClose}\n          bill={this.state.billToVoteOn}\n          inFavour={this.state.inFavour}\n        />\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <Typography variant=\"h3\" gutterBottom>\n                PayIdentity\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                To make online payments more seamless, we have developed a\n                mechanism to reference payment methods by domain name. This\n                enables a merchant to list all payment methods they accept in\n                our system and PayIdentity makes it easier for people to pay\n                their merchant with the medium that best suits them. Similarly,\n                PayIdentity can seamlessly convert value from one medium to\n                another to reduce the friction between buyer and seller.\n              </Typography>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <Typography variant=\"h4\" gutterBottom>\n                Identities\n              </Typography>\n              <Identities />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={\"paper\"}>\n              <Typography variant=\"h4\" gutterBottom>\n                Payment Methods\n              </Typography>\n              <PaymentMethodPanels />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              size={\"large\"}\n              color={\"primary\"}\n              fullWidth\n              onClick={() => this.save()}\n              variant={\"contained\"}\n            >\n              Confirm\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            {/* Identifying myself and donation address */}\n            <Paper className={\"paper\"}>\n              <Typography variant=\"caption\">\n                Built by <span className={\"yellow\"}>SibosYellow</span> for the\n                SIBOS 2019 Hackathon\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRoot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={1}>\n    <App />\n  </SnackbarProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}